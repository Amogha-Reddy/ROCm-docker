# Build this dockerfile with `docker build -f hcc-dockerfile -t hcc:master .`

# To reduce container rebuild time, place commands least likely to change at top to
# most changing at bottom

# This builds the hcc compiler, and depends on an already existing
# rocr-runtime to be found

# This kfd has only been tested so far on linux-headers-generic-lts-vivid
# ubuntu:14.04.3, the native kernel is '3.19'
FROM rocr:master
MAINTAINER Kent Knox <kent.knox@amd>

# Constant environment variables
ENV WORKPATH /root
ENV HCC_INSTALL_PATH /opt/hcc

ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${HCC_INSTALL_PATH}/lib
ENV PATH ${PATH}:${HCC_INSTALL_PATH}/bin

# Set working directory to be root's home directory
WORKDIR ${WORKPATH}

# Default to a login shell
ENTRYPOINT ["/bin/bash"]
CMD ["-l"]

# Install dependencies required to build hcc
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  build-essential \
  python \
  libstdc++-4.8-dev \
  libdwarf-dev \
  libelf-dev \
  libtinfo-dev \
  libc6-dev-i386 \
  gcc-multilib \
  llvm \
  llvm-dev \
  llvm-runtime \
  libc++1 \
  libc++-dev \
  libc++abi-dev \
  re2c \
  libncurses5-dev \
  cmake \
  git \
  wget \
  subversion && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# Build hcc, install to /usr/local
RUN cd /usr/local/src && \
  git clone https://bitbucket.org/multicoreware/hcc.git && \
  mkdir -p hcc/build && \
  cd hcc/build && \
  cmake \
    -DCMAKE_INSTALL_PREFIX=${HCC_INSTALL_PATH} \
    -DCMAKE_BUILD_TYPE=Release \
    -DHSA_HEADER_DIR=${ROCR_INSTALL_PATH}/include \
    -DHSA_LIBRARY_DIR=${ROCR_INSTALL_PATH}/lib \
    -DHSA_KMT_LIBRARY_DIR=${ROCR_INSTALL_PATH}/lib \
    .. && \
  make -j `nproc` world && \
  make install && \
  cd .. && rm -rf build
